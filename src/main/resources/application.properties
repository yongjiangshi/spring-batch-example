# ===============================================
# Spring Boot Product Data ETL Application Configuration
# ===============================================

# ===============================================
# H2 Database Configuration
# ===============================================
# In-memory H2 database for development and testing
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
# Enable H2 console for database inspection at http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================================
# JPA/Hibernate Configuration
# ===============================================
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# Don't auto-create schema, use schema.sql instead
spring.jpa.hibernate.ddl-auto=none
# Show SQL queries in logs for debugging
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Initialize database with schema.sql on startup
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

# ===============================================
# Spring Batch Configuration
# ===============================================
# Disable automatic job execution on startup (we use CommandLineRunner)
spring.batch.job.enabled=false
# Always initialize batch schema tables
spring.batch.initialize-schema=always
# Job repository settings
spring.batch.job.names=productEtlJob

# ===============================================
# Logging Configuration
# ===============================================
# Root logging level
logging.level.root=INFO
# Spring Batch framework logging
logging.level.org.springframework.batch=INFO
# Application-specific logging
logging.level.com.example.productdataetl=DEBUG
# Listener logging for job/step monitoring
logging.level.com.example.productdataetl.listener=INFO
# Error handling logging
logging.level.com.example.productdataetl.config.CustomSkipPolicy=WARN
logging.level.com.example.productdataetl.config.CustomRetryPolicy=DEBUG
# Spring Batch skip/retry logging
logging.level.org.springframework.batch.core.step.skip=WARN
logging.level.org.springframework.retry=DEBUG
# Transaction logging
logging.level.org.springframework.transaction=WARN
# SQL logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# ===============================================
# File Processing Configuration
# ===============================================
# Input CSV file location (classpath or file system path)
batch.input.file=classpath:products.csv
# Output report file location
batch.output.file=file:sales_report.csv
# CSV parsing settings
batch.csv.delimiter=,
batch.csv.quote.character="
batch.csv.skip.lines=1

# ===============================================
# Batch Processing Settings
# ===============================================
# Number of items processed in each chunk/transaction
batch.chunk.size=10
# Page size for database pagination
batch.page.size=100
# Thread pool settings for parallel processing
batch.thread.pool.size=1
batch.thread.pool.max.size=5
batch.thread.pool.queue.capacity=25

# ===============================================
# Error Handling Configuration
# ===============================================
# Maximum number of items to skip before failing the job
batch.skip.limit=5
# Maximum number of retry attempts for transient errors
batch.retry.limit=3
# Whether to log details of skipped items
batch.error.log.skipped.items=true
# Retry delay in milliseconds
batch.retry.initial.delay=1000
batch.retry.max.delay=10000
batch.retry.multiplier=2.0

# ===============================================
# Business Logic Configuration
# ===============================================
# Price threshold for sales report filtering
batch.sales.report.price.threshold=50.0
# Date format for import timestamps
batch.date.format=yyyy-MM-dd HH:mm:ss

# ===============================================
# Performance and Monitoring
# ===============================================
# Enable JMX for monitoring
spring.jmx.enabled=true
# Actuator endpoints for health monitoring
management.endpoints.web.exposure.include=health,info,metrics,beans
management.endpoint.health.show-details=always
# Application info
info.app.name=Product Data ETL
info.app.description=Spring Batch ETL pipeline for product data processing
info.app.version=1.0.0